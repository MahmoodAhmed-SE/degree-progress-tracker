CREATE DATABASE DEGREE_PROGRAMS_DB;

CREATE TABLE IF NOT EXISTS MAJOR (
  id SERIAL PRIMARY KEY,
  title TEXT NOT NULL,
  aim TEXT,
  objectives TEXT[]
);

CREATE TABLE IF NOT EXISTS PROGRAM (
  id SERIAL PRIMARY KEY,
  major_id INT NOT NULL REFERENCES MAJOR(id) ON DELETE CASCADE,
  p_type TEXT NOT NULL CHECK (p_type IN ('diploma', 'diploma 2', 'advanced diploma', 'bachelor')) 
);

CREATE TABLE IF NOT EXISTS YEAR (
  id SERIAL PRIMARY KEY,
  program_id INT NOT NULL REFERENCES PROGRAM(id) ON DELETE CASCADE,
  year_number INT
);

CREATE TABLE IF NOT EXISTS SEMESTER (
  id SERIAL PRIMARY KEY,
  year_id INT NOT NULL REFERENCES YEAR(id) ON DELETE CASCADE,
  semester_number INT NOT NULL
);

CREATE TABLE IF NOT EXISTS COURSE (
  id SERIAL PRIMARY KEY,
  code TEXT UNIQUE NOT NULL,
  title TEXT NOT NULL,
  description TEXT,
  is_elective BOOLEAN
);

CREATE TABLE IF NOT EXISTS SEMESTER_COURSE (
  id SERIAL PRIMARY KEY,
  course_id INT NOT NULL REFERENCES COURSE(id) ON DELETE CASCADE,
  semester_id INT NOT NULL REFERENCES SEMESTER(id) ON DELETE CASCADE
);


-- each group can contain 1 or more courses (options, as in, this course OR that course) 
CREATE TABLE IF NOT EXISTS PREREQUISITE_GROUP (
  id SERIAL PRIMARY KEY,
  course_id INT NOT NULL REFERENCES COURSE(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS PREREQUISITE_COURSE (
  prerequisite_course_id INT NOT NULL REFERENCES COURSE(id) ON DELETE CASCADE,
  prerequisite_group_id INT NOT NULL REFERENCES PREREQUISITE_GROUP(id) ON DELETE CASCADE,

  PRIMARY KEY (prerequisite_course_id, prerequisite_group_id)
);